{"message":"unused import: `std::collections::LinkedList`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/source/entry.rs","byte_start":37,"byte_end":65,"line_start":2,"line_end":2,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use std::collections::LinkedList;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/source/entry.rs","byte_start":33,"byte_end":66,"line_start":2,"line_end":2,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use std::collections::LinkedList;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::LinkedList`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/entry.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::LinkedList;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":117,"byte_end":125,"line_start":5,"line_end":5,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":113,"byte_end":126,"line_start":5,"line_end":5,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::fmt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":43,"byte_end":62,"line_start":3,"line_end":3,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":39,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::prelude::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::io::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::collections::LinkedList`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":68,"byte_end":96,"line_start":4,"line_end":4,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use std::collections::LinkedList;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":64,"byte_end":97,"line_start":4,"line_end":4,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use std::collections::LinkedList;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::LinkedList`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::LinkedList;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `source::binCoder::BinCoder`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":40,"byte_end":66,"line_start":4,"line_end":4,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use source::binCoder::BinCoder;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":36,"byte_end":67,"line_start":4,"line_end":4,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use source::binCoder::BinCoder;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `source::binCoder::BinCoder`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse source::binCoder::BinCoder;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `source::binFiler`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":72,"byte_end":88,"line_start":5,"line_end":5,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use source::binFiler;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":68,"byte_end":89,"line_start":5,"line_end":5,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use source::binFiler;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `source::binFiler`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse source::binFiler;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::collections::LinkedList`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":94,"byte_end":122,"line_start":6,"line_end":6,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use std::collections::LinkedList;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":90,"byte_end":123,"line_start":6,"line_end":6,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use std::collections::LinkedList;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::LinkedList`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::LinkedList;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":6478,"byte_end":6479,"line_start":268,"line_end":268,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"\t\t\t\t_ => println!(\"yet to be implemented..\")","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:268:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                _ => println!(\"yet to be implemented..\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"message":"value assigned to `con` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":279,"byte_end":282,"line_start":12,"line_end":12,"column_start":10,"column_end":13,"is_primary":true,"text":[{"text":"\tlet mut con = String::new();","highlight_start":10,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `con` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:12:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut con = String::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `d`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1446,"byte_end":1447,"line_start":67,"line_end":67,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"\tlet d = bWri.writeData(reg);","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1446,"byte_end":1447,"line_start":67,"line_end":67,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"\tlet d = bWri.writeData(reg);","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":"_d","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `d`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:67:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let d = bWri.writeData(reg);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_d`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `wasNul`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1415,"byte_end":1421,"line_start":71,"line_end":71,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut wasNul = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1415,"byte_end":1421,"line_start":71,"line_end":71,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut wasNul = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"_wasNul","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `wasNul`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:71:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut wasNul = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_wasNul`\u001b[0m\n\n"}
{"message":"value assigned to `isAssign` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":4053,"byte_end":4061,"line_start":178,"line_end":178,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"\t\t\t\t\t\tisAssign = true;","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `isAssign` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:178:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        isAssign = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `isCommand` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":5270,"byte_end":5279,"line_start":223,"line_end":223,"column_start":7,"column_end":16,"is_primary":true,"text":[{"text":"\t\t\t\t\t\tisCommand = true;","highlight_start":7,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `isCommand` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:223:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        isCommand = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":503,"byte_end":504,"line_start":22,"line_end":22,"column_start":7,"column_end":8,"is_primary":true,"text":[{"text":"\t\tlet x = result.write_u16::<LittleEndian>(i);","highlight_start":7,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":503,"byte_end":504,"line_start":22,"line_end":22,"column_start":7,"column_end":8,"is_primary":true,"text":[{"text":"\t\tlet x = result.write_u16::<LittleEndian>(i);","highlight_start":7,"highlight_end":8}],"label":null,"suggested_replacement":"_x","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:22:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let x = result.write_u16::<LittleEndian>(i);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x`\u001b[0m\n\n"}
{"message":"unused variable: `finalData`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":643,"byte_end":652,"line_start":32,"line_end":32,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tlet finalData = &result[0..resultSize];","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":643,"byte_end":652,"line_start":32,"line_end":32,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tlet finalData = &result[0..resultSize];","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":"_finalData","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `finalData`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:32:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let finalData = &result[0..resultSize];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_finalData`\u001b[0m\n\n"}
{"message":"unused variable: `path`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":1004,"byte_end":1008,"line_start":55,"line_end":55,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"pub fn alternative(path: String, data: &Vec<u16>) {","highlight_start":20,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":1004,"byte_end":1008,"line_start":55,"line_end":55,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"pub fn alternative(path: String, data: &Vec<u16>) {","highlight_start":20,"highlight_end":24}],"label":null,"suggested_replacement":"_path","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `path`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:55:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn alternative(path: String, data: &Vec<u16>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_path`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":394,"byte_end":401,"line_start":16,"line_end":16,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet mut res = handler.handle();","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":394,"byte_end":398,"line_start":16,"line_end":16,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"\tlet mut res = handler.handle();","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:16:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut res = handler.handle();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":476,"byte_end":488,"line_start":21,"line_end":21,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\tlet mut splitted: Vec<&str> = con.split(\"\\n\").collect();","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":476,"byte_end":480,"line_start":21,"line_end":21,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"\t\t\tlet mut splitted: Vec<&str> = con.split(\"\\n\").collect();","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:21:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut splitted: Vec<&str> = con.split(\"\\n\").collect();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":586,"byte_end":591,"line_start":25,"line_end":25,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut c = String::from(splitted[i]);","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":586,"byte_end":590,"line_start":25,"line_end":25,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut c = String::from(splitted[i]);","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:25:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let mut c = String::from(splitted[i]);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1067,"byte_end":1072,"line_start":52,"line_end":52,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"\t\tlet mut s = splitted[i].clone();","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1067,"byte_end":1071,"line_start":52,"line_end":52,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet mut s = splitted[i].clone();","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:52:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut s = splitted[i].clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1102,"byte_end":1115,"line_start":53,"line_end":53,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut tokenList = lexer.lex(s);","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1102,"byte_end":1106,"line_start":53,"line_end":53,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet mut tokenList = lexer.lex(s);","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:53:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut tokenList = lexer.lex(s);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1170,"byte_end":1175,"line_start":55,"line_end":55,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"\t\tlet mut e = parser.parse(tokenList);","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1170,"byte_end":1174,"line_start":55,"line_end":55,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet mut e = parser.parse(tokenList);","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:55:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut e = parser.parse(tokenList);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/fileHandler.rs","byte_start":254,"byte_end":262,"line_start":13,"line_end":13,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"\t\tlet mut file = File::open(&(self.path))?;","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/fileHandler.rs","byte_start":254,"byte_end":258,"line_start":13,"line_end":13,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet mut file = File::open(&(self.path))?;","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/fileHandler.rs:13:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut file = File::open(&(self.path))?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":344,"byte_end":349,"line_start":17,"line_end":17,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"\t\tlet mut e: Entry;","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":344,"byte_end":348,"line_start":17,"line_end":17,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet mut e: Entry;","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:17:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut e: Entry;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1411,"byte_end":1421,"line_start":71,"line_end":71,"column_start":7,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut wasNul = false;","highlight_start":7,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1411,"byte_end":1415,"line_start":71,"line_end":71,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet mut wasNul = false;","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:71:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut wasNul = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"function is never used: `printTokenList`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":744,"byte_end":758,"line_start":39,"line_end":39,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn printTokenList(list: &LinkedList<Token>){","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `printTokenList`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn printTokenList(list: &LinkedList<Token>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"function is never used: `modelFile`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1577,"byte_end":1586,"line_start":72,"line_end":72,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"pub fn modelFile(reg: &LinkedList<Entry>) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `modelFile`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:72:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn modelFile(reg: &LinkedList<Entry>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function is never used: `printToken`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/token.rs","byte_start":210,"byte_end":220,"line_start":20,"line_end":20,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn printToken(&self){","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `printToken`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/token.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn printToken(&self){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function is never used: `printList`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":3221,"byte_end":3230,"line_start":196,"line_end":196,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn printList(&self, l: &LinkedList<Entry>) {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `printList`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:196:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn printList(&self, l: &LinkedList<Entry>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function is never used: `to_string`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/entryType.rs","byte_start":130,"byte_end":139,"line_start":10,"line_end":10,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn to_string(&self) -> String {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `to_string`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/entryType.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn to_string(&self) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function is never used: `printEntry`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/entry.rs","byte_start":157,"byte_end":167,"line_start":10,"line_end":10,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn printEntry(&self){","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `printEntry`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/entry.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn printEntry(&self){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `printType`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":175,"byte_end":184,"line_start":11,"line_end":11,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"fn printType<T>(_: &T) {","highlight_start":4,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `printType`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:11:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn printType<T>(_: &T) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `alternative`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":992,"byte_end":1003,"line_start":55,"line_end":55,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"pub fn alternative(path: String, data: &Vec<u16>) {","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `alternative`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:55:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn alternative(path: String, data: &Vec<u16>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variable `fCon` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":320,"byte_end":324,"line_start":20,"line_end":20,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet fCon = asrealize::openFile(src.to_string());","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":320,"byte_end":324,"line_start":20,"line_end":20,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet fCon = asrealize::openFile(src.to_string());","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"f_con","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fCon` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:20:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let fCon = asrealize::openFile(src.to_string());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `f_con`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `eCon` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":371,"byte_end":375,"line_start":21,"line_end":21,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet eCon = asrealize::interpret(fCon);","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":371,"byte_end":375,"line_start":21,"line_end":21,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"\t\tlet eCon = asrealize::interpret(fCon);","highlight_start":7,"highlight_end":11}],"label":null,"suggested_replacement":"e_con","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `eCon` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:21:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let eCon = asrealize::interpret(fCon);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `e_con`\u001b[0m\n\n"}
{"message":"module `fileHandler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/mod.rs","byte_start":28,"byte_end":39,"line_start":3,"line_end":3,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"pub mod fileHandler;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/mod.rs","byte_start":28,"byte_end":39,"line_start":3,"line_end":3,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"pub mod fileHandler;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"file_handler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `fileHandler` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/mod.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub mod fileHandler;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `file_handler`\u001b[0m\n\n"}
{"message":"module `entryType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/mod.rs","byte_start":97,"byte_end":106,"line_start":9,"line_end":9,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub mod entryType;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/mod.rs","byte_start":97,"byte_end":106,"line_start":9,"line_end":9,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub mod entryType;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"entry_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `entryType` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/mod.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub mod entryType;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `entry_type`\u001b[0m\n\n"}
{"message":"module `binCodes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/mod.rs","byte_start":132,"byte_end":140,"line_start":12,"line_end":12,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod binCodes;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/mod.rs","byte_start":132,"byte_end":140,"line_start":12,"line_end":12,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod binCodes;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"bin_codes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `binCodes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/mod.rs:12:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub mod binCodes;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bin_codes`\u001b[0m\n\n"}
{"message":"module `binCoder` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/mod.rs","byte_start":150,"byte_end":158,"line_start":13,"line_end":13,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod binCoder;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/mod.rs","byte_start":150,"byte_end":158,"line_start":13,"line_end":13,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod binCoder;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"bin_coder","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `binCoder` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/mod.rs:13:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub mod binCoder;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bin_coder`\u001b[0m\n\n"}
{"message":"module `binFiler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/mod.rs","byte_start":168,"byte_end":176,"line_start":14,"line_end":14,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod binFiler;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/mod.rs","byte_start":168,"byte_end":176,"line_start":14,"line_end":14,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod binFiler;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"bin_filer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `binFiler` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/mod.rs:14:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub mod binFiler;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bin_filer`\u001b[0m\n\n"}
{"message":"function `openFile` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":234,"byte_end":242,"line_start":11,"line_end":11,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"pub fn openFile(p: String) -> Vec<String>{","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":234,"byte_end":242,"line_start":11,"line_end":11,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"pub fn openFile(p: String) -> Vec<String>{","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":"open_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `openFile` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:11:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn openFile(p: String) -> Vec<String>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `open_file`\u001b[0m\n\n"}
{"message":"variable `stringVec` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":309,"byte_end":318,"line_start":13,"line_end":13,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\tlet mut stringVec: Vec<String> = Vec::new();\t","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":309,"byte_end":318,"line_start":13,"line_end":13,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\tlet mut stringVec: Vec<String> = Vec::new();\t","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"string_vec","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `stringVec` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:13:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut stringVec: Vec<String> = Vec::new();    \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `string_vec`\u001b[0m\n\n"}
{"message":"function `printTokenList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":744,"byte_end":758,"line_start":39,"line_end":39,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn printTokenList(list: &LinkedList<Token>){","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":744,"byte_end":758,"line_start":39,"line_end":39,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn printTokenList(list: &LinkedList<Token>){","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":"print_token_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `printTokenList` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn printTokenList(list: &LinkedList<Token>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_token_list`\u001b[0m\n\n"}
{"message":"variable `tokenList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1106,"byte_end":1115,"line_start":53,"line_end":53,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut tokenList = lexer.lex(s);","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1106,"byte_end":1115,"line_start":53,"line_end":53,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut tokenList = lexer.lex(s);","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"token_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tokenList` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:53:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut tokenList = lexer.lex(s);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `token_list`\u001b[0m\n\n"}
{"message":"function `makeFile` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1344,"byte_end":1352,"line_start":65,"line_end":65,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"pub fn makeFile(binName: String, reg: &LinkedList<Entry>) {","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1344,"byte_end":1352,"line_start":65,"line_end":65,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"pub fn makeFile(binName: String, reg: &LinkedList<Entry>) {","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":"make_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `makeFile` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:65:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn makeFile(binName: String, reg: &LinkedList<Entry>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `make_file`\u001b[0m\n\n"}
{"message":"variable `binName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1353,"byte_end":1360,"line_start":65,"line_end":65,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"pub fn makeFile(binName: String, reg: &LinkedList<Entry>) {","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1353,"byte_end":1360,"line_start":65,"line_end":65,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"pub fn makeFile(binName: String, reg: &LinkedList<Entry>) {","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"bin_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `binName` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:65:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn makeFile(binName: String, reg: &LinkedList<Entry>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bin_name`\u001b[0m\n\n"}
{"message":"variable `bWri` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1406,"byte_end":1410,"line_start":66,"line_end":66,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"\tlet mut bWri = BinCoder{data: Vec::new()};","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1406,"byte_end":1410,"line_start":66,"line_end":66,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"\tlet mut bWri = BinCoder{data: Vec::new()};","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"b_wri","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `bWri` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:66:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut bWri = BinCoder{data: Vec::new()};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b_wri`\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1519,"byte_end":1566,"line_start":69,"line_end":69,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tbinFiler::writeBinaryFile(binName, &bWri.data);","highlight_start":2,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_must_use)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:69:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    binFiler::writeBinaryFile(binName, &bWri.data);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_must_use)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\n"}
{"message":"function `modelFile` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1577,"byte_end":1586,"line_start":72,"line_end":72,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"pub fn modelFile(reg: &LinkedList<Entry>) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/asrealize.rs","byte_start":1577,"byte_end":1586,"line_start":72,"line_end":72,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"pub fn modelFile(reg: &LinkedList<Entry>) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"model_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `modelFile` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/asrealize.rs:72:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn modelFile(reg: &LinkedList<Entry>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `model_file`\u001b[0m\n\n"}
{"message":"variable `bufReader` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/fileHandler.rs","byte_start":302,"byte_end":311,"line_start":14,"line_end":14,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut bufReader = BufReader::new(file);","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/fileHandler.rs","byte_start":302,"byte_end":311,"line_start":14,"line_end":14,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut bufReader = BufReader::new(file);","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"buf_reader","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `bufReader` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/fileHandler.rs:14:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut bufReader = BufReader::new(file);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `buf_reader`\u001b[0m\n\n"}
{"message":"structure field `tokenList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/lexer.rs","byte_start":99,"byte_end":108,"line_start":7,"line_end":7,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tpub tokenList: LinkedList<Token>","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/lexer.rs","byte_start":99,"byte_end":108,"line_start":7,"line_end":7,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tpub tokenList: LinkedList<Token>","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":"token_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `tokenList` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/lexer.rs:7:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub tokenList: LinkedList<Token>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `token_list`\u001b[0m\n\n"}
{"message":"method `charToToken` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/lexer.rs","byte_start":150,"byte_end":161,"line_start":12,"line_end":12,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"\tfn charToToken(&self, c:char)-> Token{","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/lexer.rs","byte_start":150,"byte_end":161,"line_start":12,"line_end":12,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"\tfn charToToken(&self, c:char)-> Token{","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"char_to_token","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `charToToken` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/lexer.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn charToToken(&self, c:char)-> Token{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `char_to_token`\u001b[0m\n\n"}
{"message":"method `printToken` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/token.rs","byte_start":210,"byte_end":220,"line_start":20,"line_end":20,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn printToken(&self){","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/token.rs","byte_start":210,"byte_end":220,"line_start":20,"line_end":20,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn printToken(&self){","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"print_token","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `printToken` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/token.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn printToken(&self){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_token`\u001b[0m\n\n"}
{"message":"structure field `entryRegister` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":186,"byte_end":199,"line_start":11,"line_end":11,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub entryRegister: LinkedList<Entry>","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":186,"byte_end":199,"line_start":11,"line_end":11,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub entryRegister: LinkedList<Entry>","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"entry_register","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `entryRegister` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:11:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub entryRegister: LinkedList<Entry>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `entry_register`\u001b[0m\n\n"}
{"message":"variable `tokenList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":257,"byte_end":266,"line_start":15,"line_end":15,"column_start":22,"column_end":31,"is_primary":true,"text":[{"text":"\tpub fn parse(&self, tokenList: &LinkedList<Token>) -> Entry {","highlight_start":22,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":257,"byte_end":266,"line_start":15,"line_end":15,"column_start":22,"column_end":31,"is_primary":true,"text":[{"text":"\tpub fn parse(&self, tokenList: &LinkedList<Token>) -> Entry {","highlight_start":22,"highlight_end":31}],"label":null,"suggested_replacement":"token_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tokenList` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:15:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn parse(&self, tokenList: &LinkedList<Token>) -> Entry {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `token_list`\u001b[0m\n\n"}
{"message":"variable `isSection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":382,"byte_end":391,"line_start":20,"line_end":20,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut isSection = false;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":382,"byte_end":391,"line_start":20,"line_end":20,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut isSection = false;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"is_section","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isSection` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:20:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isSection = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_section`\u001b[0m\n\n"}
{"message":"variable `isAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":411,"byte_end":422,"line_start":21,"line_end":21,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"\t\tlet mut isAttribute = false;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":411,"byte_end":422,"line_start":21,"line_end":21,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"\t\tlet mut isAttribute = false;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"is_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isAttribute` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:21:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isAttribute = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_attribute`\u001b[0m\n\n"}
{"message":"variable `isCommand` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":442,"byte_end":451,"line_start":22,"line_end":22,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut isCommand = false;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":442,"byte_end":451,"line_start":22,"line_end":22,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut isCommand = false;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"is_command","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isCommand` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:22:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isCommand = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_command`\u001b[0m\n\n"}
{"message":"variable `isAssignment` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":471,"byte_end":483,"line_start":23,"line_end":23,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"\t\tlet mut isAssignment = false;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":471,"byte_end":483,"line_start":23,"line_end":23,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"\t\tlet mut isAssignment = false;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"is_assignment","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isAssignment` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:23:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isAssignment = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_assignment`\u001b[0m\n\n"}
{"message":"variable `wasLt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":504,"byte_end":509,"line_start":25,"line_end":25,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"\t\tlet mut wasLt = false;\t\t","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":504,"byte_end":509,"line_start":25,"line_end":25,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"\t\tlet mut wasLt = false;\t\t","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"was_lt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `wasLt` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:25:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut wasLt = false;        \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `was_lt`\u001b[0m\n\n"}
{"message":"variable `wasDig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":531,"byte_end":537,"line_start":26,"line_end":26,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut wasDig = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":531,"byte_end":537,"line_start":26,"line_end":26,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut wasDig = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"was_dig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `wasDig` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:26:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut wasDig = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `was_dig`\u001b[0m\n\n"}
{"message":"variable `bracketOpened` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":558,"byte_end":571,"line_start":28,"line_end":28,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"\t\tlet mut bracketOpened = false;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":558,"byte_end":571,"line_start":28,"line_end":28,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"\t\tlet mut bracketOpened = false;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"bracket_opened","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `bracketOpened` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:28:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut bracketOpened = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bracket_opened`\u001b[0m\n\n"}
{"message":"variable `bracketClosed` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":591,"byte_end":604,"line_start":29,"line_end":29,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"\t\tlet mut bracketClosed = false;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":591,"byte_end":604,"line_start":29,"line_end":29,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"\t\tlet mut bracketClosed = false;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"bracket_closed","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `bracketClosed` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:29:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut bracketClosed = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bracket_closed`\u001b[0m\n\n"}
{"message":"variable `qtOpened` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":627,"byte_end":635,"line_start":31,"line_end":31,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut qtOpened = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":627,"byte_end":635,"line_start":31,"line_end":31,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut qtOpened = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"qt_opened","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `qtOpened` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:31:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut qtOpened = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `qt_opened`\u001b[0m\n\n"}
{"message":"variable `qtClosed` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":655,"byte_end":663,"line_start":32,"line_end":32,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut qtClosed = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":655,"byte_end":663,"line_start":32,"line_end":32,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut qtClosed = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"qt_closed","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `qtClosed` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:32:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut qtClosed = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `qt_closed`\u001b[0m\n\n"}
{"message":"variable `wordBuf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":696,"byte_end":703,"line_start":35,"line_end":35,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut wordBuf = String::new();","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":696,"byte_end":703,"line_start":35,"line_end":35,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut wordBuf = String::new();","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"word_buf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `wordBuf` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:35:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut wordBuf = String::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `word_buf`\u001b[0m\n\n"}
{"message":"variable `numBuf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":731,"byte_end":737,"line_start":36,"line_end":36,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut numBuf = String::new();","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":731,"byte_end":737,"line_start":36,"line_end":36,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut numBuf = String::new();","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"num_buf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `numBuf` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:36:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut numBuf = String::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `num_buf`\u001b[0m\n\n"}
{"message":"variable `typeBuf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":765,"byte_end":772,"line_start":37,"line_end":37,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut typeBuf: EntryType = EntryType::NUL;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":765,"byte_end":772,"line_start":37,"line_end":37,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut typeBuf: EntryType = EntryType::NUL;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"type_buf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `typeBuf` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:37:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut typeBuf: EntryType = EntryType::NUL;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `type_buf`\u001b[0m\n\n"}
{"message":"method `addEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":3141,"byte_end":3149,"line_start":191,"line_end":191,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\tpub fn addEntry(&mut self, e: Entry) {","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":3141,"byte_end":3149,"line_start":191,"line_end":191,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\tpub fn addEntry(&mut self, e: Entry) {","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"add_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `addEntry` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:191:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn addEntry(&mut self, e: Entry) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `add_entry`\u001b[0m\n\n"}
{"message":"method `printList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/parser.rs","byte_start":3221,"byte_end":3230,"line_start":196,"line_end":196,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn printList(&self, l: &LinkedList<Entry>) {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/parser.rs","byte_start":3221,"byte_end":3230,"line_start":196,"line_end":196,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn printList(&self, l: &LinkedList<Entry>) {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"print_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `printList` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/parser.rs:196:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn printList(&self, l: &LinkedList<Entry>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_list`\u001b[0m\n\n"}
{"message":"method `printEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/entry.rs","byte_start":157,"byte_end":167,"line_start":10,"line_end":10,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn printEntry(&self){","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/entry.rs","byte_start":157,"byte_end":167,"line_start":10,"line_end":10,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn printEntry(&self){","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"print_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `printEntry` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/entry.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn printEntry(&self){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_entry`\u001b[0m\n\n"}
{"message":"variable `strType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/entry.rs","byte_start":182,"byte_end":189,"line_start":11,"line_end":11,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"\t\tlet strType = self.kind.to_string();","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/entry.rs","byte_start":182,"byte_end":189,"line_start":11,"line_end":11,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"\t\tlet strType = self.kind.to_string();","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":"str_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `strType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/entry.rs:11:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let strType = self.kind.to_string();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `str_type`\u001b[0m\n\n"}
{"message":"function `printType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":175,"byte_end":184,"line_start":11,"line_end":11,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"fn printType<T>(_: &T) {","highlight_start":4,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":175,"byte_end":184,"line_start":11,"line_end":11,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"fn printType<T>(_: &T) {","highlight_start":4,"highlight_end":13}],"label":null,"suggested_replacement":"print_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `printType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:11:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn printType<T>(_: &T) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_type`\u001b[0m\n\n"}
{"message":"function `asciiExtract` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":248,"byte_end":260,"line_start":15,"line_end":15,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn asciiExtract(s: &String) -> LinkedList<u16> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":248,"byte_end":260,"line_start":15,"line_end":15,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn asciiExtract(s: &String) -> LinkedList<u16> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":"ascii_extract","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `asciiExtract` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:15:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn asciiExtract(s: &String) -> LinkedList<u16> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ascii_extract`\u001b[0m\n\n"}
{"message":"function `numExtract` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":522,"byte_end":532,"line_start":29,"line_end":29,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"fn numExtract(s: &String) -> LinkedList<u16> {","highlight_start":4,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":522,"byte_end":532,"line_start":29,"line_end":29,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"fn numExtract(s: &String) -> LinkedList<u16> {","highlight_start":4,"highlight_end":14}],"label":null,"suggested_replacement":"num_extract","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `numExtract` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:29:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn numExtract(s: &String) -> LinkedList<u16> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `num_extract`\u001b[0m\n\n"}
{"message":"function `isAlphabetic` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":937,"byte_end":949,"line_start":50,"line_end":50,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn isAlphabetic(s: &String) -> bool{","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":937,"byte_end":949,"line_start":50,"line_end":50,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn isAlphabetic(s: &String) -> bool{","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":"is_alphabetic","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `isAlphabetic` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:50:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn isAlphabetic(s: &String) -> bool{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_alphabetic`\u001b[0m\n\n"}
{"message":"function `isNumeric` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1041,"byte_end":1050,"line_start":55,"line_end":55,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"fn isNumeric(s: &String) -> bool {","highlight_start":4,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1041,"byte_end":1050,"line_start":55,"line_end":55,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"fn isNumeric(s: &String) -> bool {","highlight_start":4,"highlight_end":13}],"label":null,"suggested_replacement":"is_numeric","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `isNumeric` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:55:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn isNumeric(s: &String) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_numeric`\u001b[0m\n\n"}
{"message":"method `writeData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1160,"byte_end":1169,"line_start":61,"line_end":61,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn writeData(&mut self, entries: &LinkedList<Entry>) {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1160,"byte_end":1169,"line_start":61,"line_end":61,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn writeData(&mut self, entries: &LinkedList<Entry>) {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"write_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `writeData` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:61:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn writeData(&mut self, entries: &LinkedList<Entry>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_data`\u001b[0m\n\n"}
{"message":"variable `isMeta` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1222,"byte_end":1228,"line_start":62,"line_end":62,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut isMeta = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1222,"byte_end":1228,"line_start":62,"line_end":62,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut isMeta = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"is_meta","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isMeta` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:62:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isMeta = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_meta`\u001b[0m\n\n"}
{"message":"variable `isBody` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1248,"byte_end":1254,"line_start":63,"line_end":63,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut isBody = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1248,"byte_end":1254,"line_start":63,"line_end":63,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut isBody = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"is_body","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isBody` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:63:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isBody = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_body`\u001b[0m\n\n"}
{"message":"variable `isHeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1275,"byte_end":1283,"line_start":65,"line_end":65,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut isHeight = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1275,"byte_end":1283,"line_start":65,"line_end":65,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut isHeight = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"is_height","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isHeight` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:65:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isHeight = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_height`\u001b[0m\n\n"}
{"message":"variable `isWidth` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1303,"byte_end":1310,"line_start":66,"line_end":66,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut isWidth = false;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1303,"byte_end":1310,"line_start":66,"line_end":66,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut isWidth = false;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"is_width","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isWidth` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:66:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isWidth = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_width`\u001b[0m\n\n"}
{"message":"variable `isTitle` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1330,"byte_end":1337,"line_start":67,"line_end":67,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut isTitle = false;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1330,"byte_end":1337,"line_start":67,"line_end":67,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"\t\tlet mut isTitle = false;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"is_title","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isTitle` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:67:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isTitle = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_title`\u001b[0m\n\n"}
{"message":"variable `isCommand` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1358,"byte_end":1367,"line_start":69,"line_end":69,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut isCommand = false;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1358,"byte_end":1367,"line_start":69,"line_end":69,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet mut isCommand = false;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"is_command","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isCommand` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:69:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isCommand = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_command`\u001b[0m\n\n"}
{"message":"variable `isAssign` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1387,"byte_end":1395,"line_start":70,"line_end":70,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut isAssign = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1387,"byte_end":1395,"line_start":70,"line_end":70,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\t\tlet mut isAssign = false;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"is_assign","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `isAssign` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:70:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut isAssign = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_assign`\u001b[0m\n\n"}
{"message":"variable `wasNul` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1415,"byte_end":1421,"line_start":71,"line_end":71,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut wasNul = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":1415,"byte_end":1421,"line_start":71,"line_end":71,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"\t\tlet mut wasNul = false;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"was_nul","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `wasNul` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:71:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut wasNul = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `was_nul`\u001b[0m\n\n"}
{"message":"method `addValue` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binCoder.rs","byte_start":6537,"byte_end":6545,"line_start":274,"line_end":274,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"\tfn addValue(&mut self, d: LinkedList<u16>) {","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binCoder.rs","byte_start":6537,"byte_end":6545,"line_start":274,"line_end":274,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"\tfn addValue(&mut self, d: LinkedList<u16>) {","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"add_value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `addValue` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binCoder.rs:274:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn addValue(&mut self, d: LinkedList<u16>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `add_value`\u001b[0m\n\n"}
{"message":"function `writeBinaryFile` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":152,"byte_end":167,"line_start":7,"line_end":7,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn writeBinaryFile(path: String, data: &Vec<u16>) -> std::io::Result<()> {","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":152,"byte_end":167,"line_start":7,"line_end":7,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn writeBinaryFile(path: String, data: &Vec<u16>) -> std::io::Result<()> {","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":"write_binary_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `writeBinaryFile` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:7:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn writeBinaryFile(path: String, data: &Vec<u16>) -> std::io::Result<()> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_binary_file`\u001b[0m\n\n"}
{"message":"variable `resultSize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":553,"byte_end":563,"line_start":25,"line_end":25,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"\tlet resultSize = result.len();","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":553,"byte_end":563,"line_start":25,"line_end":25,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"\tlet resultSize = result.len();","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":"result_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `resultSize` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:25:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let resultSize = result.len();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `result_size`\u001b[0m\n\n"}
{"message":"variable `finalData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/source/binFiler.rs","byte_start":643,"byte_end":652,"line_start":32,"line_end":32,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tlet finalData = &result[0..resultSize];","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/source/binFiler.rs","byte_start":643,"byte_end":652,"line_start":32,"line_end":32,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tlet finalData = &result[0..resultSize];","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":"final_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `finalData` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/source/binFiler.rs:32:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let finalData = &result[0..resultSize];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `final_data`\u001b[0m\n\n"}
{"message":"linking with `cc` failed: exit status: 1","code":null,"level":"error","spans":[],"children":[{"message":"\"cc\" \"-m64\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.10p651nz3qqtl81p.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.11vhxw8q0qe7g0p7.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1537x87yuy2awsdd.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.16evfkjngdngb3je.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.16isj08q9c0v33df.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.18s5tk8m5yfhdqts.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1inc5ei18y48j7xu.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1js50q1n7px17mcq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1qlss9gxn17xnk7d.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1uzpyp3paiql2sqo.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1vqo33famhxg2c7k.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1w5m4k46882ixo09.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.207cqk7t0zrzycpz.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.23vx7n8mhwzs8li4.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2492vujuihsjljiq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.25ejwz368q8gtu23.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.291dby8xgdamzh23.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2932lc92yplya3k0.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2au4yhx0dkc9zyp2.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2avv35ba9h36uqyf.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2exku0ylup04wp6t.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2hjq155leyoagglo.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2nhokdsfey1113g5.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2qyw033kptqaduhl.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2rxwqf5cvemsy0mr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2vemnw80msoevj56.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2vjecmyduzkf16of.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2yaav2gdwfkcmd3h.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.32j9vqeb5uhorf24.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.34t43umgapyiks4s.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3bfojt3tjgnwvgn3.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3eyd6yr5xcqiv05f.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3joksh6t4vanrtv1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3mlzyvzsbf3x4uju.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3npwjj7tvekkpsmp.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3p5dpwlwh30wz0hs.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3pt844r7t0eq9as1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3s2kss4d7gkyx4dq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3sc9htqajw0js1dj.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3uana18avlptcus4.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3wbre1mf1vwrnu91.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3x16bl61npgb44ax.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3xchgjpdwsl4oecz.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3yamd23g39ou6swa.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3ywo5qert4jbc0oe.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3z2hyglbomrg9vqp.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.40la7d91jilijbtr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.41ikay5cwslho9r1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.45jwssanuvq1oe02.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4a8sa0mt4o2wv2uu.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4atuiyb4v5h9zu7v.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4bembb84ryrjafoc.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4bfh6x87cv1uleof.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4jhdje5pkiejbg4i.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4n068tiozsljma6i.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4o3b78etfq65lxid.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4p827i6ll94730qp.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4pband12ne7s0edi.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4qbn9xr5xfa7488a.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4trkr6at0oiu9ly2.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4v0njdk4beg96hq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4z1ac4s58yyz1irr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.50j3sqdnii1646wj.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.521j6jlb6lii3gwf.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.53fthbobzzvclsqi.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.54gjrlppfj2az89g.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.54wqc9b11wt3a7tr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.55eeifevv5tj9bpi.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5a6ckrruviv94t2e.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5bb3bwshg3jla3ha.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5bbw4a479oncefaw.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5bmvfoa5v6ow2436.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5ee2fqc3pm8x6c6w.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5gg7sdye49wxvms9.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5jfkon7b5vmvxt3.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5nr7xwd2fp6or6t.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.7e7lmlynjj0lbtu.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.8ays1nf8jv204jh.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.9ebpinp4moi0f1z.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.hshxy48g2wbe2vt.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.lvjs5mabk01p9vm.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.pnk0ebuui22sb9h.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.rs0n09xeko53go1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.ry8jlh8iswd97dh.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.v7uczup0358iicf.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.vo1ujl3imytwxd0.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.yuzx10li07g61oh.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.zj4lnie8ny68ikd.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1dbu5w85e61a06cz.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps\" \"-L\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/debug/deps\" \"-L\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/libbyteorder-e40473e44737b146.rlib\" \"-Wl,--start-group\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-2420485b9e5ef5e1.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-785e3cb61c4b1960.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libminiz_oxide-087191a88bdaa22d.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libadler-9981842c02975178.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libobject-6fb405869b015fde.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libaddr2line-d05c5c3c56004b7b.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgimli-42d74d2097528b38.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_detect-fb36534c113d2209.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_demangle-b56b9042c12b6535.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libhashbrown-491902d6cb3e76df.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-61834e0981b8c367.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-f78aa99d613a55bc.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcfg_if-53ee54cd7fed2c57.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-544ecdbd6cda3c58.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-379cc252b6943a79.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-8063eea38dcc5e62.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-5b228734afae15ee.rlib\" \"-Wl,--end-group\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-d6c7a399d95d173f.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-Wl,--eh-frame-hdr\" \"-Wl,-znoexecstack\" \"-L\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\"","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"clang: warning: argument unused during compilation: '-pie' [-Wunused-command-line-argument]\nld: unknown option: --as-needed\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: linking with `cc` failed: exit status: 1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: \"cc\" \"-m64\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.10p651nz3qqtl81p.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.11vhxw8q0qe7g0p7.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1537x87yuy2awsdd.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.16evfkjngdngb3je.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.16isj08q9c0v33df.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.18s5tk8m5yfhdqts.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1inc5ei18y48j7xu.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1js50q1n7px17mcq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1qlss9gxn17xnk7d.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1uzpyp3paiql2sqo.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1vqo33famhxg2c7k.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1w5m4k46882ixo09.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.207cqk7t0zrzycpz.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.23vx7n8mhwzs8li4.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2492vujuihsjljiq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.25ejwz368q8gtu23.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.291dby8xgdamzh23.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2932lc92yplya3k0.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2au4yhx0dkc9zyp2.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2avv35ba9h36uqyf.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2exku0ylup04wp6t.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2hjq155leyoagglo.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2nhokdsfey1113g5.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2qyw033kptqaduhl.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2rxwqf5cvemsy0mr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2vemnw80msoevj56.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2vjecmyduzkf16of.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.2yaav2gdwfkcmd3h.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.32j9vqeb5uhorf24.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.34t43umgapyiks4s.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3bfojt3tjgnwvgn3.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3eyd6yr5xcqiv05f.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3joksh6t4vanrtv1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3mlzyvzsbf3x4uju.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3npwjj7tvekkpsmp.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3p5dpwlwh30wz0hs.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3pt844r7t0eq9as1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3s2kss4d7gkyx4dq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3sc9htqajw0js1dj.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3uana18avlptcus4.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3wbre1mf1vwrnu91.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3x16bl61npgb44ax.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3xchgjpdwsl4oecz.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3yamd23g39ou6swa.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3ywo5qert4jbc0oe.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.3z2hyglbomrg9vqp.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.40la7d91jilijbtr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.41ikay5cwslho9r1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.45jwssanuvq1oe02.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4a8sa0mt4o2wv2uu.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4atuiyb4v5h9zu7v.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4bembb84ryrjafoc.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4bfh6x87cv1uleof.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4jhdje5pkiejbg4i.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4n068tiozsljma6i.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4o3b78etfq65lxid.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4p827i6ll94730qp.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4pband12ne7s0edi.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4qbn9xr5xfa7488a.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4trkr6at0oiu9ly2.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4v0njdk4beg96hq.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.4z1ac4s58yyz1irr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.50j3sqdnii1646wj.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.521j6jlb6lii3gwf.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.53fthbobzzvclsqi.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.54gjrlppfj2az89g.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.54wqc9b11wt3a7tr.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.55eeifevv5tj9bpi.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5a6ckrruviv94t2e.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5bb3bwshg3jla3ha.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5bbw4a479oncefaw.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5bmvfoa5v6ow2436.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5ee2fqc3pm8x6c6w.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5gg7sdye49wxvms9.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5jfkon7b5vmvxt3.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.5nr7xwd2fp6or6t.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.7e7lmlynjj0lbtu.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.8ays1nf8jv204jh.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.9ebpinp4moi0f1z.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.hshxy48g2wbe2vt.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.lvjs5mabk01p9vm.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.pnk0ebuui22sb9h.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.rs0n09xeko53go1.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.ry8jlh8iswd97dh.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.v7uczup0358iicf.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.vo1ujl3imytwxd0.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.yuzx10li07g61oh.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.zj4lnie8ny68ikd.rcgu.o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682.1dbu5w85e61a06cz.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps\" \"-L\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/debug/deps\" \"-L\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/libbyteorder-e40473e44737b146.rlib\" \"-Wl,--start-group\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-2420485b9e5ef5e1.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-785e3cb61c4b1960.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libminiz_oxide-087191a88bdaa22d.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libadler-9981842c02975178.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libobject-6fb405869b015fde.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libaddr2line-d05c5c3c56004b7b.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgimli-42d74d2097528b38.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_detect-fb36534c113d2209.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_demangle-b56b9042c12b6535.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libhashbrown-491902d6cb3e76df.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-61834e0981b8c367.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-f78aa99d613a55bc.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcfg_if-53ee54cd7fed2c57.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-544ecdbd6cda3c58.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-379cc252b6943a79.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-8063eea38dcc5e62.rlib\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-5b228734afae15ee.rlib\" \"-Wl,--end-group\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-d6c7a399d95d173f.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-Wl,--eh-frame-hdr\" \"-Wl,-znoexecstack\" \"-L\" \"/Users/amsakan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-o\" \"/Users/amsakan/dev/asrealize2/src/compiler/target/x86_64-unknown-linux-gnu/debug/deps/asrealize2_compiler-b31b1c91c72d6682\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: clang: warning: argument unused during compilation: '-pie' [-Wunused-command-line-argument]\u001b[0m\n\u001b[0m          ld: unknown option: --as-needed\u001b[0m\n\u001b[0m          clang: error: linker command failed with exit code 1 (use -v to see invocation)\u001b[0m\n\u001b[0m          \u001b[0m\n\n"}
{"message":"aborting due to previous error; 90 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error; 90 warnings emitted\u001b[0m\n\n"}
